/**
 * üì± iOS SCRIPTABLE WIDGET - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
 * 
 * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
 * –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –≤–∏–¥–∂–µ—Ç–∞
 */

// ========== –ù–ê–°–¢–†–û–ô–ö–ò ==========
const API_BASE_URL = "https://web-production-547b.up.railway.app"; // –í–∞—à Railway URL

// ========== –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ==========
async function createWidget() {
    const widget = new ListWidget();
    widget.backgroundColor = new Color("#151634");
    
    try {
        const data = await fetchMetrics();
        await setupMetricsWidget(widget, data);
    } catch (error) {
        setupErrorWidget(widget);
    }
    
    return widget;
}

// ========== –ü–û–õ–£–ß–ï–ù–ò–ï –ú–ï–¢–†–ò–ö ==========
async function fetchMetrics() {
    const url = `${API_BASE_URL}/api/metrics?student=–í—Å–µ`;
    const request = new Request(url);
    request.timeoutInterval = 8;
    
    const response = await request.loadJSON();
    return response;
}

// ========== –í–ò–î–ñ–ï–¢ –ú–ï–¢–†–ò–ö ==========
async function setupMetricsWidget(widget, metrics) {
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    const titleText = widget.addText("üìä –°—Ç—É–¥–∏—è");
    titleText.font = Font.boldSystemFont(14);
    titleText.textColor = Color.white();
    titleText.centerAlignText();
    
    widget.addSpacer(8);
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ —Å–µ—Ç–∫–µ 2x2
    const topStack = widget.addStack();
    topStack.layoutHorizontally();
    topStack.spacing = 12;
    
    // –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ
    const plannedStack = topStack.addStack();
    plannedStack.layoutVertically();
    const plannedLabel = plannedStack.addText("–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ");
    plannedLabel.font = Font.systemFont(9);
    plannedLabel.textColor = new Color("#94A3B8");
    plannedLabel.centerAlignText();
    const plannedValue = plannedStack.addText(`${metrics.planned || 0}`);
    plannedValue.font = Font.boldSystemFont(18);
    plannedValue.textColor = Color.white();
    plannedValue.centerAlignText();
    
    // –ü–æ—Å–µ—â–µ–Ω–æ
    const attendedStack = topStack.addStack();
    attendedStack.layoutVertically();
    const attendedLabel = attendedStack.addText("–ü–æ—Å–µ—â–µ–Ω–æ");
    attendedLabel.font = Font.systemFont(9);
    attendedLabel.textColor = new Color("#94A3B8");
    attendedLabel.centerAlignText();
    const attendedValue = attendedStack.addText(`${metrics.attended || 0}`);
    attendedValue.font = Font.boldSystemFont(18);
    attendedValue.textColor = new Color("#00C1FF");
    attendedValue.centerAlignText();
    
    widget.addSpacer(8);
    
    const bottomStack = widget.addStack();
    bottomStack.layoutHorizontally();
    bottomStack.spacing = 12;
    
    // –ü—Ä–æ–ø—É—â–µ–Ω–æ
    const missedStack = bottomStack.addStack();
    missedStack.layoutVertically();
    const missedLabel = missedStack.addText("–ü—Ä–æ–ø—É—â–µ–Ω–æ");
    missedLabel.font = Font.systemFont(9);
    missedLabel.textColor = new Color("#94A3B8");
    missedLabel.centerAlignText();
    const missedValue = missedStack.addText(`${metrics.missed || 0}`);
    missedValue.font = Font.boldSystemFont(18);
    missedValue.textColor = new Color("#FD7000");
    missedValue.centerAlignText();
    
    // –ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å
    const rateStack = bottomStack.addStack();
    rateStack.layoutVertically();
    const rateLabel = rateStack.addText("–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å");
    rateLabel.font = Font.systemFont(9);
    rateLabel.textColor = new Color("#94A3B8");
    rateLabel.centerAlignText();
    const rateValue = rateStack.addText(`${Math.round(metrics.attendance_rate || 0)}%`);
    rateValue.font = Font.boldSystemFont(18);
    rateValue.textColor = new Color("#FDDD00");
    rateValue.centerAlignText();
    
    widget.addSpacer(4);
    
    // –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const timeText = widget.addText(formatTime(new Date()));
    timeText.font = Font.systemFont(8);
    timeText.textColor = new Color("#6B7280");
    timeText.centerAlignText();
}

// ========== –í–ò–î–ñ–ï–¢ –û–®–ò–ë–ö–ò ==========
function setupErrorWidget(widget) {
    widget.addSpacer();
    
    const errorText = widget.addText("‚ùå");
    errorText.font = Font.systemFont(32);
    errorText.centerAlignText();
    
    const messageText = widget.addText("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
    messageText.font = Font.systemFont(12);
    messageText.textColor = new Color("#94A3B8");
    messageText.centerAlignText();
    
    widget.addSpacer();
}

// ========== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========
function formatTime(date) {
    const hours = date.getHours().toString().padStart(2, '0');
    const minutes = date.getMinutes().toString().padStart(2, '0');
    return `${hours}:${minutes}`;
}

// ========== –ó–ê–ü–£–°–ö ==========
if (config.runsInWidget) {
    const widget = await createWidget();
    Script.setWidget(widget);
} else {
    const widget = await createWidget();
    widget.presentSmall();
}

Script.complete();
