#!/usr/bin/env python3
"""
–ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ê–ë–û–ù–ï–ú–ï–ù–¢–û–í - –°–•–û–î–ò–ú–û–°–¢–¨ –î–ê–ù–ù–´–•
"""

import os
import sys
from dotenv import load_dotenv
from google_sheets_service import sheets_service
import config
import logging

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('.env.local')

def setup_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å"""
    console_handler = logging.StreamHandler()
    console_handler.setLevel(logging.ERROR)  # –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –≤—ã–≤–æ–¥
    formatter = logging.Formatter('%(message)s')
    console_handler.setFormatter(formatter)
    
    logger = logging.getLogger()
    logger.addHandler(console_handler)
    logger.setLevel(logging.ERROR)

def check_all_subscriptions():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ö–æ–¥–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –í–°–ï–• –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –ê–ë–û–ù–ï–ú–ï–ù–¢–û–í - –°–•–û–î–ò–ú–û–°–¢–¨ –î–ê–ù–ù–´–•")
    print("=" * 70)
    
    if not sheets_service:
        print("‚ùå sheets_service –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return
    
    setup_logging()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞–Ω—è—Ç–∏–π
        print("\nüìã –®–ê–ì 1: –ü–û–õ–£–ß–ê–ï–ú –î–ê–ù–ù–´–ï –ò–ó –ö–ê–õ–ï–ù–î–ê–†–Ø –ó–ê–ù–Ø–¢–ò–ô")
        print("-" * 50)
        
        cal_sheet = sheets_service.spreadsheet.worksheet("–ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–Ω—è—Ç–∏–π")
        cal_data = cal_sheet.get_all_values()
        
        if len(cal_data) <= 1:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –∑–∞–Ω—è—Ç–∏–π")
            return
        
        cal_headers = cal_data[0]
        print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {cal_headers}")
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–Ω—è—Ç–∏—è –ø–æ ID –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
        calendar_stats = {}
        for i, row in enumerate(cal_data[1:], 2):
            if len(row) > 6:
                subscription_id = row[1] if len(row) > 1 else ''  # B - ID –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
                status = row[4] if len(row) > 4 else ''  # E - –°—Ç–∞—Ç—É—Å –ø–æ—Å–µ—â–µ–Ω–∏—è
                mark = row[6] if len(row) > 6 else ''  # G - –û—Ç–º–µ—Ç–∫–∞
                
                if subscription_id:
                    if subscription_id not in calendar_stats:
                        calendar_stats[subscription_id] = {
                            'total': 0,
                            'zaversheno': 0,
                            'zaplanirovanno': 0,
                            'propusk': 0,
                            'lessons': []
                        }
                    
                    calendar_stats[subscription_id]['total'] += 1
                    calendar_stats[subscription_id]['lessons'].append({
                        'row': i,
                        'status': status,
                        'mark': mark
                    })
                    
                    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
                    status_lower = status.lower()
                    if status_lower == '–∑–∞–≤–µ—Ä—à–µ–Ω':
                        calendar_stats[subscription_id]['zaversheno'] += 1
                    elif status_lower == '–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ':
                        calendar_stats[subscription_id]['zaplanirovanno'] += 1
                    elif status_lower == '–ø—Ä–æ–ø—É—Å–∫':
                        calendar_stats[subscription_id]['propusk'] += 1
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(calendar_stats)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤
        print("\nüìä –®–ê–ì 2: –ü–û–õ–£–ß–ê–ï–ú –î–ê–ù–ù–´–ï –ò–ó –õ–ò–°–¢–ê –ê–ë–û–ù–ï–ú–ï–ù–¢–´")
        print("-" * 50)
        
        subs_sheet = sheets_service.spreadsheet.worksheet("–ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã")
        subs_data = subs_sheet.get_all_values()
        
        if len(subs_data) <= 1:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤")
            return
        
        subs_headers = subs_data[0]
        print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤: {subs_headers}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ª–∏—Å—Ç–∞ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤
        subscription_sheet_stats = {}
        for i, row in enumerate(subs_data[1:], 2):
            if len(row) > 1:
                subscription_id = row[1] if len(row) > 1 else ''  # B - ID –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
                h_value = row[7] if len(row) > 7 else ''  # H - –ü—Ä–æ—à–ª–æ –∑–∞–Ω—è—Ç–∏–π
                i_value = row[8] if len(row) > 8 else ''  # I - –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–Ω—è—Ç–∏–π
                m_value = row[12] if len(row) > 12 else ''  # M - –ü—Ä–æ–ø—É—â–µ–Ω–æ
                j_value = row[9] if len(row) > 9 else ''  # J - –°—Ç–∞—Ç—É—Å
                
                if subscription_id:
                    subscription_sheet_stats[subscription_id] = {
                        'row': i,
                        'h_current': h_value,
                        'i_current': i_value,
                        'm_current': m_value,
                        'j_current': j_value
                    }
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(subscription_sheet_stats)} –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤ –≤ –ª–∏—Å—Ç–µ")
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        print("\nüîç –®–ê–ì 3: –°–†–ê–í–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•")
        print("-" * 50)
        print(f"{'ID –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞':<30} {'H(—Ñ–∞–∫—Ç/–æ–∂–∏–¥)':<15} {'I(—Ñ–∞–∫—Ç/–æ–∂–∏–¥)':<15} {'M(—Ñ–∞–∫—Ç/–æ–∂–∏–¥)':<15} {'J(—Ñ–∞–∫—Ç/–æ–∂–∏–¥)':<15} {'–°—Ç–∞—Ç—É—Å':<10}")
        print("-" * 110)
        
        correct_count = 0
        incorrect_count = 0
        
        for subscription_id in calendar_stats:
            cal_stats = calendar_stats[subscription_id]
            
            # –û–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
            expected_h = cal_stats['zaversheno']  # –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
            expected_i = cal_stats['zaplanirovanno']  # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
            expected_m = cal_stats['propusk']  # –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
            expected_j = '–ó–∞–≤–µ—Ä—à–µ–Ω' if expected_i == 0 else '–ê–∫—Ç–∏–≤–µ–Ω'  # –°—Ç–∞—Ç—É—Å
            
            if subscription_id in subscription_sheet_stats:
                sheet_stats = subscription_sheet_stats[subscription_id]
                
                # –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ª–∏—Å—Ç–∞
                current_h = sheet_stats['h_current']
                current_i = sheet_stats['i_current']
                current_m = sheet_stats['m_current']
                current_j = sheet_stats['j_current']
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ö–æ–¥–∏–º–æ—Å—Ç—å
                h_match = str(current_h) == str(expected_h)
                i_match = str(current_i) == str(expected_i)
                m_match = str(current_m) == str(expected_m)
                j_match = str(current_j).strip().lower() == expected_j.lower()
                
                if h_match and i_match and m_match and j_match:
                    status = "‚úÖ OK"
                    correct_count += 1
                else:
                    status = "‚ùå –ù–ï –°–•–û–î–ò–¢–°–Ø"
                    incorrect_count += 1
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                h_display = f"{current_h}/{expected_h}"
                i_display = f"{current_i}/{expected_i}"
                m_display = f"{current_m}/{expected_m}"
                j_display = f"{current_j}/{expected_j}"
                
                print(f"{subscription_id:<30} {h_display:<15} {i_display:<15} {m_display:<15} {j_display:<15} {status:<10}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –¥–ª—è –Ω–µ—Å—Ö–æ–¥—è—â–∏—Ö—Å—è
                if not (h_match and i_match and m_match and j_match):
                    print(f"  üìã –ó–∞–Ω—è—Ç–∏–π –≤—Å–µ–≥–æ: {cal_stats['total']}")
                    print(f"  üìä –°—Ç–∞—Ç—É—Å—ã: –ó–∞–≤–µ—Ä—à–µ–Ω={cal_stats['zaversheno']}, –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ={cal_stats['zaplanirovanno']}, –ü—Ä–æ–ø—É—Å–∫={cal_stats['propusk']}")
                    print(f"  üîç –û–∂–∏–¥–∞–µ–º—ã–π —Å—Ç–∞—Ç—É—Å: {expected_j}")
                    
            else:
                print(f"{subscription_id:<30} {'–ù–ï–¢ –í –õ–ò–°–¢–ï':<15} {'–ù–ï–¢ –í –õ–ò–°–¢–ï':<15} {'–ù–ï–¢ –í –õ–ò–°–¢–ï':<15} {'–ù–ï–¢ –í –õ–ò–°–¢–ï':<15} {'‚ùå –ù–ï–¢':<10}")
                incorrect_count += 1
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\n" + "=" * 70)
        print(f"üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤: {correct_count}")
        print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤: {incorrect_count}")
        print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö: {correct_count/(correct_count+incorrect_count)*100:.1f}%" if (correct_count+incorrect_count) > 0 else "0%")
        
        if incorrect_count > 0:
            print(f"\nüîß –ò–°–ü–†–ê–í–õ–Ø–ï–ú {incorrect_count} –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–• –ê–ë–û–ù–ï–ú–ï–ù–¢–û–í:")
            print("-" * 50)
            
            fixed_count = 0
            for subscription_id in calendar_stats:
                cal_stats = calendar_stats[subscription_id]
                
                # –û–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
                expected_h = cal_stats['zaversheno']
                expected_i = cal_stats['zaplanirovanno']
                expected_m = cal_stats['propusk']
                
                if subscription_id in subscription_sheet_stats:
                    sheet_stats = subscription_sheet_stats[subscription_id]
                    
                    # –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ª–∏—Å—Ç–∞
                    current_h = sheet_stats['h_current']
                    current_i = sheet_stats['i_current']
                    current_m = sheet_stats['m_current']
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å
                    h_match = str(current_h) == str(expected_h)
                    i_match = str(current_i) == str(expected_i)
                    m_match = str(current_m) == str(expected_m)
                    expected_j = '–ó–∞–≤–µ—Ä—à–µ–Ω' if expected_i == 0 else '–ê–∫—Ç–∏–≤–µ–Ω'
                    current_j = subscription_sheet_stats[subscription_id]['j_current']
                    j_match = str(current_j).strip().lower() == expected_j.lower()
                    
                    if not (h_match and i_match and m_match and j_match):
                        print(f"üîÑ –ò—Å–ø—Ä–∞–≤–ª—è—é {subscription_id}...")
                        try:
                            result = sheets_service.update_subscription_stats(subscription_id)
                            print(f"  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                            fixed_count += 1
                        except Exception as e:
                            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
            
            print(f"\nüìä –ò–°–ü–†–ê–í–õ–ï–ù–û: {fixed_count} –∏–∑ {incorrect_count} –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤")
        else:
            print(f"\nüéâ –í–°–ï –î–ê–ù–ù–´–ï –°–•–û–î–Ø–¢–°–Ø –ü–†–ê–í–ò–õ–¨–ù–û!")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    check_all_subscriptions()
